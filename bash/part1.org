#+TITLE: Part 1: learning the Shell
* What is the shell
  + 当我们说到command line的时候,我们其实是说的shell. shell是一个从键盘接受信息
    传递给操作系统的程序.Linux默认的shell是bash
** Terminal Emulators
   + 如果我们使用GUI界面的话,我们还要使用terminal emulator来和shell进行联系.KDE
     里面使用的是konsole, GNOME使用的是gnome-terminal
** Your First keystrokes
   + 打开terminal emulator,应该是如下这个样子的
     #+begin_src sh
       lvtest@auto-inst:~$ 
     #+end_src
   + $(dollar sign)代表一般用户, #(hash mark)代表超级用户.
*** Command History
    + 上下键可以选择上一条下一条命令,一遍最少会保存500条历史
*** Cursor Movement
    + 左右键,可以让光标左右移动
** Try Some Simple Commands
   + date是日期命令
     #+begin_src sh
       lvtest@auto-inst:~$ date
       Wed Feb 26 16:13:11 CST 2014
     #+end_src
   + cal是日历命令
     #+begin_src sh
       lvtest@auto-inst:~$ cal
          February 2014      
       Su Mo Tu We Th Fr Sa  
                          1  
        2  3  4  5  6  7  8  
        9 10 11 12 13 14 15  
       16 17 18 19 20 21 22  
       23 24 25 26 27 28     
     #+end_src
   + df可以查看当前驱动器下面的剩余空间
     #+begin_src sh
       lvtest@auto-inst:~$ df
       Filesystem     1K-blocks    Used Available Use% Mounted on
       /dev/sda1       40120704 1944148  36131884   6% /
       none                   4       0         4   0% /sys/fs/cgroup
       udev              496420       4    496416   1% /dev
       tmpfs             101188     296    100892   1% /run
       none                5120       0      5120   0% /run/lock
       none              505932       0    505932   0% /run/shm
       none              102400       0    102400   0% /run/user
     #+end_src
   + free产科内存的剩余
     #+begin_src sh
       lvtest@auto-inst:~$ free
                    total       used       free     shared    buffers     cached
       Mem:       1011868     227332     784536          0      21464      78256
       -/+ buffers/cache:     127612     884256
       Swap:      1046524          0    1046524
     #+end_src
** Ending a Terminal Session
   + 我们使用exit来结束一个terminal session
   + 除了我们上面说的terminal emulator, Linux还会在GUI的背后运行一些terminal 
     session.叫做virtual terminal,我们可以通过CTRL+ALT+F1~F6来调用,返回GUI
     桌面使用ALT-F7
* Navigation
** Understanding the Filesystem Tree
   + 和windows一样,linux也是采用了树形结构的文件系统.第一个文件夹叫做root 文件夹(/)
   + 和windows不一样的是:windows为每一个分区准备了一个单独的"文件系统树", 对于Linux
     来说,无论有多少设备,都只有一套"文件系统树", 额外的设备是通过"mount"的形式来放在
     某个文件夹下面的
** The Current Working Directory     
   + 我们的shell当前无论如何都会在某个文件夹下,使用pwd来表示
     #+begin_src sh
       lvtest@auto-inst:~/tmp$ pwd
       /home/lvtest/tmp
     #+end_src
** Listing the Contents of a Directory
   + 当前文件夹下的内容使用ls
     #+begin_src sh
       lvtest@auto-inst:~/tmp$ ls
       a.out  printf.c  testsig.c  unpbook
     #+end_src
** Changing the Current Working Directory
*** Absolute pathnames
    + 我们使用以"/"开头的绝对文件路名来cd到相应文件夹
      #+begin_src sh
        lvtest@auto-inst:~/tmp$ cd /usr/bin
        lvtest@auto-inst:/usr/bin$ pwd
        /usr/bin
      #+end_src
*** Relative Pathnames      
    + 相对路径就是从pwd开始如何找到下一级,其中"."是当前文件夹".."是上层文件夹
      #+begin_src sh
        lvtest@auto-inst:/usr$ pwd
        /usr
        lvtest@auto-inst:/usr$ cd ./bin
        lvtest@auto-inst:/usr/bin$ pwd
        /usr/bin
      #+end_src
*** Some helpful Shortcuts
    + 一些有用的cd快捷键
      | Shortcut     | Result                                                |
      |--------------+-------------------------------------------------------|
      | cd           | Changes the working directory to your home directory  |
      | cd -         | Changes the working directory to the previous working |
      |              | directory                                             |
      | cd ~username | Changes the working directory to the home directory   |
      |              | of theusername.                                       |
      #+begin_src sh
        lvtest@auto-inst:/usr/bin$ pwd
        /usr/bin
        lvtest@auto-inst:/usr/bin$ cd 
        lvtest@auto-inst:~$ pwd
        /home/lvtest
        lvtest@auto-inst:~$ cd -
        /usr/bin
        lvtest@auto-inst:/usr/bin$ pwd
        /usr/bin
        lvtest@auto-inst:/usr/bin$ cd ~lvtest
        lvtest@auto-inst:~$ pwd
        /home/lvtest
      #+end_src
* Exploring The System
** More Fun with ls
   + ls 不仅仅可以列出当前文件夹的内容,还可以列出其他文件夹的内容,甚至多个文件夹的内容
     #+begin_src sh
       lvtest@auto-inst:~$ ls /usr
       bin  games  include  lib  local  sbin  share  src
       lvtest@auto-inst:~$ ls ~ /usr
       /home/lvtest:
       authorized_keys  backupssh  test  tmp
       
       /usr:
       bin  games  include  lib  local  sbin  share  src
     #+end_src
*** Options and Arguments
    + 我们的命令都是由如下三部分组成的
      #+begin_example
        command -options arguments      
      #+end_example
    + ls就支持-l这种"单字母"参数,而且单字母参数可以写在一块,效果叠加,还支持通过
      "--"来增加long options
      #+begin_src sh
        lvtest@auto-inst:~$ ls -l
        total 16
        -rwx------ 1 lvtest lvtest  802 Oct 24 15:05 authorized_keys
        drwx------ 2 lvtest lvtest 4096 Oct 24 15:05 backupssh
        drwxrwxr-x 3 lvtest lvtest 4096 Oct 24 16:45 test
        drwxrwxr-x 3 lvtest lvtest 4096 Feb 21 16:33 tmp
        lvtest@auto-inst:~$ ls -lt
        total 16
        drwxrwxr-x 3 lvtest lvtest 4096 Feb 21 16:33 tmp
        drwxrwxr-x 3 lvtest lvtest 4096 Oct 24 16:45 test
        -rwx------ 1 lvtest lvtest  802 Oct 24 15:05 authorized_keys
        drwx------ 2 lvtest lvtest 4096 Oct 24 15:05 backupssh
        lvtest@auto-inst:~$ ls -lt --reverse
        total 16
        drwx------ 2 lvtest lvtest 4096 Oct 24 15:05 backupssh
        -rwx------ 1 lvtest lvtest  802 Oct 24 15:05 authorized_keys
        drwxrwxr-x 3 lvtest lvtest 4096 Oct 24 16:45 test
        drwxrwxr-x 3 lvtest lvtest 4096 Feb 21 16:33 tmp
      #+end_src
    + 下面就来总结一下ls的参数
      | Option | Long Option | Description                                   |
      |--------+-------------+-----------------------------------------------|
      | -a     | --all       | List all files, even hidden files             |
      | -d     | --directory | if No -d dpecified, ls will list the contents |
      |        |             | of directory. with -d, ls will list the       |
      |        |             | directory itself                              |
      | -F     | --classify  |                                               |

     


